@page "/"
@using Kek
@rendermode InteractiveServer
<h3>Calculate</h3>
<div class="mContainer">
    <div class="result">
        <input @bind="Text" id="result-box">
    </div>
    <div class="myBox" role="group" aria-label="Second group">
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(1)">1</button>
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(2)">2</button>
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(3)">3</button>
        <button type="button" class="bt-g" @onclick="() => ClickAction(MathOperations.Quotient, '/')">/</button>
    </div>
    <div class="myBox" role="group" aria-label="Second group">
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(4)">4</button>
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(5)">5</button>
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(6)">6</button>
        <button type="button" class="bt-g" @onclick="() => ClickAction(MathOperations.Product, '*')">*</button>
    </div>
    <div class="myBox" role="group" aria-label="Second group">
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(7)">7</button>
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(8)">8</button>
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(9)">9</button>
        <button type="button" class="bt-g" @onclick="() => ClickAction(MathOperations.Diff, '-')">-</button>
    </div>
    <div class="myBox" role="group" aria-label="Second group">
        <button type="button" class="bu-num" @onclick="() => ClickBtnNum(0)">0</button>
        <button type="button" class="bt-g" @onclick="() => ClickAction(MathOperations.Sum, '+')">+</button>
        <button type="button" class="bt-g" id="total" @onclick="() => Calculation()">=</button>
        <button type="button" class="bt-c" id="clear" @onclick="() => Clear(0)">C</button>
    </div>
</div>
@code {
    public float Num1 { get; set; }
    public float Num2 { get; set; }
    public MathOperations Action { get; set; }
    public string Text = "";

    public Home()
    {
        Action = MathOperations.Undefined;
    }

    private void ClickBtnNum(double value)
    {
        Text += value.ToString();
        StateHasChanged();
    }

    private void ClickAction(MathOperations action, char mark)
    {
        Action = action;
        Text += mark.ToString();
    }

    public void Calculation()
    {
        string[] digits = Text.Split(new char[] { '+', '-', '*', '/' });
        var result1 = float.TryParse(digits[0], out var num1);
        if (result1)
            Num1 = num1;

        var result2 = float.TryParse(digits[1], out var num2);
        if (result2)
            Num2 = num2;

        switch (Action)
        {
            case MathOperations.Sum:
                Text = (Num1 + Num2).ToString();
                break;
            case MathOperations.Diff:
                Text = (Num1 - Num2).ToString();
                break;
            case MathOperations.Product:
                Text = (Num1 * Num2).ToString();
                break;
            case MathOperations.Quotient:
                Text = (Num1 / Num2).ToString();
                break;
        }
        Action = MathOperations.Undefined;
    }
    void Clear(double x)
    {
        switch (x)
        {
            case 0:
                Text = string.Empty;
                break;
            case 1:
                double length = Text.Length - 1;
                string line = Text;
                Text = "";
                for (int i = 0; i < length; i++)
                {
                    Text += line[i];
                }
                break;
        }
    }
}
